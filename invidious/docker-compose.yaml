services:

  invidious:
    image: quay.io/invidious/invidious:latest
    container_name: invidious
    restart: unless-stopped
    environment:
      INVIDIOUS_CONFIG: |
        database_url: postgres://kemal:kemal@localhost:5432/invidious
        check_tables: true
        signature_server: inv_sig_helper:12999
        visitor_data:
        po_token:
        external_port: 443
        domain: "invidious.hughboi.cc"
        https_only: true
        statistics_enabled: false
        hmac_key:
    # healthcheck:
    #   test: wget -nv --tries=1 --spider https://invidious.hughboi.cc/api/v1/trending || exit 1
    #   interval: 30s
    #   timeout: 5s
    #   retries: 2
    logging:
      options:
        max-size: "1G"
        max-file: "4"
    depends_on:
      - invidious-db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.invidious.entrypoints=http"
      - "traefik.http.routers.invidious.rule=Host(`invidious.hughboi.cc`)"
      - "traefik.http.middlewares.invidious-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.invidious.middlewares=invidious-https-redirect"
      - "traefik.http.routers.invidious-secure.entrypoints=https"
      - "traefik.http.routers.invidious-secure.rule=Host(`invidious.hughboi.cc`)"
      - "traefik.http.routers.invidious-secure.tls=true"
      - "traefik.http.services.invidious.loadbalancer.server.port=3000"
      - "traefik.docker.network=proxy"
    networks:
      - proxy
      - invidious



  inv_sig_helper:
    image: quay.io/invidious/inv-sig-helper:latest
    container_name: invidious-sig-helper
    init: true
    command: ["--tcp", "0.0.0.0:12999"]
    environment:
      - RUST_LOG=info
    restart: unless-stopped
    cap_drop:
      - ALL
    read_only: true
    security_opt:
      - no-new-privileges:true
    networks:
      - invidious

  invidious-db:
    image: docker.io/library/postgres:16 #was on postgres:14 before
    container_name: invidious-db
    restart: unless-stopped
    volumes:
      - ./postgresdata:/var/lib/postgresql/data
      - ./config/sql:/config/sql
      - ./docker/init-invidious-db.sh:/docker-entrypoint-initdb.d/init-invidious-db.sh
    environment:
      POSTGRES_DB: invidious
      POSTGRES_USER: kemal
      POSTGRES_PASSWORD: jXribrkbSHcztNHzoYrxJdKpwyDvq5uM
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
    networks:
      - invidious

networks:
  invidious:
    driver: bridge
  proxy:
    external: true
