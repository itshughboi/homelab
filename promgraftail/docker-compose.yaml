services:
  loki:
    container_name: loki
    image: grafana/loki:latest
    command: "-config.file=/etc/loki/config.yaml"
    volumes:
      - ./config/config.yaml:/etc/loki/config.yaml:ro
      - loki-data:/loki:rw
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.loki.entrypoints=http"
      - "traefik.http.routers.loki.rule=Host(`loki.hughboi.cc`)"
      - "traefik.http.middlewares.loki-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.loki.middlewares=loki-https-redirect"
      - "traefik.http.routers.loki-secure.entrypoints=https"
      - "traefik.http.routers.loki-secure.rule=Host(`loki.hughboi.cc`)"
      - "traefik.http.routers.loki-secure.tls=true"
      - "traefik.http.routers.loki-secure.service=loki"
      - "traefik.http.services.loki.loadbalancer.server.port=3100"
      - "traefik.docker.network=proxy"
    networks:
      - proxy
      - promgraftail
    restart: unless-stopped


  promtail:
    container_name: promtail
    image: grafana/promtail:latest
    command: -config.file=/etc/promtail/promtail-config.yml
    networks:
      - promgraftail
    volumes:
      - /var/log:/var/log
      - ./promtail:/etc/promtail
    ports:
      - "1541:1514" # this is only needed if you are going to send syslogs
    restart: unless-stopped


  grafana:
    container_name: grafana
    image: grafana/grafana:main
    user: "0" # << gives permission to write to grafana. Probably should be 1000 to not run as root but ran into an issue
    networks:
      - promgraftail
      - proxy
    volumes:
    - grafana-data:/var/lib/grafana
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.entrypoints=http"
      - "traefik.http.routers.grafana.rule=Host(`grafana.hughboi.cc`)"
      - "traefik.http.routers.grafana.middlewares=default-whitelist@file"
      - "traefik.http.middlewares.grafana-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.grafana.middlewares=grafana-https-redirect"
      - "traefik.http.routers.grafana-secure.entrypoints=https"
      - "traefik.http.routers.grafana-secure.rule=Host(`grafana.hughboi.cc`)"
      - "traefik.http.routers.grafana-secure.tls=true"
      - "traefik.http.routers.grafana-secure.service=grafana"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.docker.network=proxy"


  influxdb:
    container_name: influxdb
    image: influxdb:latest
    restart: unless-stopped
    user: "1000"
    ports:
      - 8089:8089/udp
    networks:
      - promgraftail
      - proxy
    volumes:
      - influxdb-data:/var/lib/influxdb
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.influxdb.entrypoints=http"
      - "traefik.http.routers.influxdb.rule=Host(`influxdb.hughboi.cc`)"
      - "traefik.http.routers.influxdb.middlewares=default-whitelist@file"
      - "traefik.http.middlewares.influxdb-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.influxdb.middlewares=influxdb-https-redirect"
      - "traefik.http.routers.influxdb-secure.entrypoints=https"
      - "traefik.http.routers.influxdb-secure.rule=Host(`influxdb.hughboi.cc`)"
      - "traefik.http.routers.influxdb-secure.tls=true"
      - "traefik.http.routers.influxdb-secure.service=influxdb"
      - "traefik.http.services.influxdb.loadbalancer.server.port=8086"
      - "traefik.docker.network=proxy"


  telegraf:
    container_name: telegraf
    image: telegraf:1.32.3
    restart: unless-stopped
    user: telegraf:988 #telegraf:1000 #you need to find the GID of Docker if not added to Sudo group
    networks:
      - promgraftail
    volumes:
        - './telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro'
        - '/:/hostfs:ro' # to monitor docker-vm
        - '/var/run/docker.sock:/var/run/docker.sock' # to monitor docker containers
        - 'mibs:/usr/share/snmp/mibs' # mibs files [e.g., sophos]
    environment:
        - HOST_ETC=/hostfs/etc
        - HOST_PROC=/hostfs/proc
        - HOST_SYS=/hostfs/sys
        - HOST_VAR=/hostfs/var
        - HOST_RUN=/hostfs/run
        - HOST_MOUNT_PREFIX=/hostfs


  graphite:
    container_name: graphite
    image: graphiteapp/graphite-statsd
    ports:
      - 8050:80 # nginx
      - 2003-2004 # carbon receiver - plaintext & pickle
      - 2023-2024 # carbon aggregator - plaintext & pickle
      - 8125:8125/udp # statsd
      - 8126:8126 # statsd admin
    volumes:
      - ./configs:/opt/graphite/conf
      - graphite-data:/opt/graphite/storage
      - ./graphite/config:/opt/statsd/config
    networks:
      - promgraftail
    restart: unless-stopped


  prometheus:
    image: prom/prometheus:v3.0.0
    container_name: prometheus
    ports:
      - 9070:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - promgraftail
      # - proxy
    restart: unless-stopped



  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest 
    container_name: cadvisor
    ports:
      - 8073:8080
    devices:
      - /dev/kmsg
    privileged: true
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    networks:
      - promgraftail
     # - proxy
    restart: unless-stopped


networks:
  promgraftail:
  proxy:
    external: true

volumes:
  loki-data:
  grafana-data:
  influxdb-data:
  mibs:
  graphite-data:
  graphite-config:
  
  
